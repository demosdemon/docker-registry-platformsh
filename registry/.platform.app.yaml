# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: registry

# The runtime the application uses.
type: golang:1.11

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  cache: rediscache:redis

# The configuration of `registry` when it is exposed to the web.
web:
  # Whether your app should speak to the webserver via TCP or Unix socket
  # https://docs.platform.sh/configuration/app-containers.html#upstream
  upstream:
    socket_family: tcp
    protocol: http
  # Commands are run once after deployment to start the application process.
  commands:
    start: registry serve <(config)
  locations:
    /:
      # Route all requests to the Go app, unconditionally.
      # If you want some files served directly by the web server without hitting Go, see
      # https://docs.platform.sh/configuration/app/web.html
      allow: false
      passthru: true

# The size of the persistent disk of the application (in MB).
disk: 4992

# Set a local R/W mount for media
mounts:
  /var/lib/registry:
    source: local
    source_path: registry
  /var/log:
    source: local
    source_path: logs

# The hooks executed at various points in the lifecycle of the application.
hooks:
  # The build hook runs before the application is deployed, and is useful for
  # assembling the codebase.
  build: ./build.sh
